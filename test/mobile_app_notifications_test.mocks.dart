// // Mocks generated by Mockito 5.4.4 from annotations
// // in mobile_app_notifications/test/mobile_app_notifications_test.dart.
// // Do not manually edit this file.
//
// // ignore_for_file: no_leading_underscores_for_library_prefixes
// import 'dart:async' as _i4;
// import 'dart:typed_data' as _i11;
//
// import 'package:android_alarm_manager_plus/android_alarm_manager_plus.dart'
//     as _i18;
// // import 'package:awesome_notifications/awesome_notifications.dart' as _i3;
// // import 'package:awesome_notifications/src/enumerators/notification_life_cycle.dart'
// //     as _i10;
// // import 'package:awesome_notifications/src/enumerators/notification_permission.dart'
// //     as _i5;
// // import 'package:awesome_notifications/src/models/notification_button.dart'
// //     as _i8;
// // import 'package:awesome_notifications/src/models/notification_channel.dart'
// //     as _i14;
// // import 'package:awesome_notifications/src/models/notification_channel_group.dart'
// //     as _i15;
// // import 'package:awesome_notifications/src/models/notification_content.dart'
// //     as _i6;
// // import 'package:awesome_notifications/src/models/notification_localization.dart'
// //     as _i9;
// // import 'package:awesome_notifications/src/models/notification_model.dart'
// //     as _i16;
// // import 'package:awesome_notifications/src/models/notification_schedule.dart'
// //     as _i7;
// // import 'package:awesome_notifications/src/models/received_models/received_action.dart'
// //     as _i12;
// import 'package:mobile_app_notifications/mobile_app_notifications.dart' as _i17;
// import 'package:mobile_app_notifications/models/mosque/detailed_mosque.dart'
//     as _i2;
// import 'package:mobile_app_notifications/models/notification/notification_info_model.dart'
//     as _i20;
// import 'package:mobile_app_notifications/models/prayers/prayer_name.dart'
//     as _i22;
// import 'package:mobile_app_notifications/models/prayers/prayer_notification.dart'
//     as _i21;
// import 'package:mobile_app_notifications/prayer_services.dart' as _i19;
// import 'package:mockito/mockito.dart' as _i1;
// import 'package:mockito/src/dummies.dart' as _i13;
//
// // ignore_for_file: type=lint
// // ignore_for_file: avoid_redundant_argument_values
// // ignore_for_file: avoid_setters_without_getters
// // ignore_for_file: comment_references
// // ignore_for_file: deprecated_member_use
// // ignore_for_file: deprecated_member_use_from_same_package
// // ignore_for_file: implementation_imports
// // ignore_for_file: invalid_use_of_visible_for_testing_member
// // ignore_for_file: prefer_const_constructors
// // ignore_for_file: unnecessary_parenthesis
// // ignore_for_file: camel_case_types
// // ignore_for_file: subtype_of_sealed_class
//
// class _FakeDetailedMosque_0 extends _i1.SmartFake
//     implements _i2.DetailedMosque {
//   _FakeDetailedMosque_0(
//     Object parent,
//     Invocation parentInvocation,
//   ) : super(
//           parent,
//           parentInvocation,
//         );
// }
//
// /// A class which mocks [AwesomeNotifications].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockAwesomeNotifications extends _i1.Mock
//     implements _i3.AwesomeNotifications {
//   MockAwesomeNotifications() {
//     _i1.throwOnMissingStub(this);
//   }
//
//   @override
//   _i4.Future<void> cancel(int? id) => (super.noSuchMethod(
//         Invocation.method(
//           #cancel,
//           [id],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> cancelAll() => (super.noSuchMethod(
//         Invocation.method(
//           #cancelAll,
//           [],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> cancelAllSchedules() => (super.noSuchMethod(
//         Invocation.method(
//           #cancelAllSchedules,
//           [],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> cancelNotificationsByChannelKey(String? channelKey) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #cancelNotificationsByChannelKey,
//           [channelKey],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> cancelNotificationsByGroupKey(String? groupKey) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #cancelNotificationsByGroupKey,
//           [groupKey],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> cancelSchedule(int? id) => (super.noSuchMethod(
//         Invocation.method(
//           #cancelSchedule,
//           [id],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> cancelSchedulesByChannelKey(String? channelKey) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #cancelSchedulesByChannelKey,
//           [channelKey],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> cancelSchedulesByGroupKey(String? groupKey) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #cancelSchedulesByGroupKey,
//           [groupKey],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<List<_i5.NotificationPermission>> checkPermissionList({
//     String? channelKey,
//     List<_i5.NotificationPermission>? permissions = const [
//       _i5.NotificationPermission.Badge,
//       _i5.NotificationPermission.Alert,
//       _i5.NotificationPermission.Sound,
//       _i5.NotificationPermission.Vibration,
//       _i5.NotificationPermission.Light,
//     ],
//   }) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #checkPermissionList,
//           [],
//           {
//             #channelKey: channelKey,
//             #permissions: permissions,
//           },
//         ),
//         returnValue: _i4.Future<List<_i5.NotificationPermission>>.value(
//             <_i5.NotificationPermission>[]),
//       ) as _i4.Future<List<_i5.NotificationPermission>>);
//
//   @override
//   _i4.Future<bool> createNotification({
//     required _i6.NotificationContent? content,
//     _i7.NotificationSchedule? schedule,
//     List<_i8.NotificationActionButton>? actionButtons,
//     Map<String, _i9.NotificationLocalization>? localizations,
//   }) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #createNotification,
//           [],
//           {
//             #content: content,
//             #schedule: schedule,
//             #actionButtons: actionButtons,
//             #localizations: localizations,
//           },
//         ),
//         returnValue: _i4.Future<bool>.value(false),
//       ) as _i4.Future<bool>);
//
//   @override
//   _i4.Future<bool> createNotificationFromJsonData(
//           Map<String, dynamic>? mapData) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #createNotificationFromJsonData,
//           [mapData],
//         ),
//         returnValue: _i4.Future<bool>.value(false),
//       ) as _i4.Future<bool>);
//
//   @override
//   _i4.Future<int> decrementGlobalBadgeCounter() => (super.noSuchMethod(
//         Invocation.method(
//           #decrementGlobalBadgeCounter,
//           [],
//         ),
//         returnValue: _i4.Future<int>.value(0),
//       ) as _i4.Future<int>);
//
//   @override
//   _i4.Future<void> dismiss(int? id) => (super.noSuchMethod(
//         Invocation.method(
//           #dismiss,
//           [id],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> dismissAllNotifications() => (super.noSuchMethod(
//         Invocation.method(
//           #dismissAllNotifications,
//           [],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> dismissNotificationsByChannelKey(String? channelKey) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #dismissNotificationsByChannelKey,
//           [channelKey],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> dismissNotificationsByGroupKey(String? groupKey) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #dismissNotificationsByGroupKey,
//           [groupKey],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<_i10.NotificationLifeCycle> getAppLifeCycle() =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #getAppLifeCycle,
//           [],
//         ),
//         returnValue: _i4.Future<_i10.NotificationLifeCycle>.value(
//             _i10.NotificationLifeCycle.Foreground),
//       ) as _i4.Future<_i10.NotificationLifeCycle>);
//
//   @override
//   _i4.Future<_i11.Uint8List?> getDrawableData(String? drawablePath) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #getDrawableData,
//           [drawablePath],
//         ),
//         returnValue: _i4.Future<_i11.Uint8List?>.value(),
//       ) as _i4.Future<_i11.Uint8List?>);
//
//   @override
//   _i4.Future<_i12.ReceivedAction?> getInitialNotificationAction(
//           {bool? removeFromActionEvents = false}) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #getInitialNotificationAction,
//           [],
//           {#removeFromActionEvents: removeFromActionEvents},
//         ),
//         returnValue: _i4.Future<_i12.ReceivedAction?>.value(),
//       ) as _i4.Future<_i12.ReceivedAction?>);
//
//   @override
//   _i4.Future<int> getGlobalBadgeCounter() => (super.noSuchMethod(
//         Invocation.method(
//           #getGlobalBadgeCounter,
//           [],
//         ),
//         returnValue: _i4.Future<int>.value(0),
//       ) as _i4.Future<int>);
//
//   @override
//   _i4.Future<String> getLocalTimeZoneIdentifier() => (super.noSuchMethod(
//         Invocation.method(
//           #getLocalTimeZoneIdentifier,
//           [],
//         ),
//         returnValue: _i4.Future<String>.value(_i13.dummyValue<String>(
//           this,
//           Invocation.method(
//             #getLocalTimeZoneIdentifier,
//             [],
//           ),
//         )),
//       ) as _i4.Future<String>);
//
//   @override
//   _i4.Future<DateTime?> getNextDate(
//     _i7.NotificationSchedule? schedule, {
//     DateTime? fixedDate,
//   }) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #getNextDate,
//           [schedule],
//           {#fixedDate: fixedDate},
//         ),
//         returnValue: _i4.Future<DateTime?>.value(),
//       ) as _i4.Future<DateTime?>);
//
//   @override
//   _i4.Future<String> getUtcTimeZoneIdentifier() => (super.noSuchMethod(
//         Invocation.method(
//           #getUtcTimeZoneIdentifier,
//           [],
//         ),
//         returnValue: _i4.Future<String>.value(_i13.dummyValue<String>(
//           this,
//           Invocation.method(
//             #getUtcTimeZoneIdentifier,
//             [],
//           ),
//         )),
//       ) as _i4.Future<String>);
//
//   @override
//   _i4.Future<int> incrementGlobalBadgeCounter() => (super.noSuchMethod(
//         Invocation.method(
//           #incrementGlobalBadgeCounter,
//           [],
//         ),
//         returnValue: _i4.Future<int>.value(0),
//       ) as _i4.Future<int>);
//
//   @override
//   _i4.Future<bool> initialize(
//     String? defaultIcon,
//     List<_i14.NotificationChannel>? channels, {
//     List<_i15.NotificationChannelGroup>? channelGroups,
//     bool? debug = false,
//     String? languageCode,
//   }) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #initialize,
//           [
//             defaultIcon,
//             channels,
//           ],
//           {
//             #channelGroups: channelGroups,
//             #debug: debug,
//             #languageCode: languageCode,
//           },
//         ),
//         returnValue: _i4.Future<bool>.value(false),
//       ) as _i4.Future<bool>);
//
//   @override
//   _i4.Future<bool> isNotificationAllowed() => (super.noSuchMethod(
//         Invocation.method(
//           #isNotificationAllowed,
//           [],
//         ),
//         returnValue: _i4.Future<bool>.value(false),
//       ) as _i4.Future<bool>);
//
//   @override
//   _i4.Future<List<_i16.NotificationModel>> listScheduledNotifications() =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #listScheduledNotifications,
//           [],
//         ),
//         returnValue: _i4.Future<List<_i16.NotificationModel>>.value(
//             <_i16.NotificationModel>[]),
//       ) as _i4.Future<List<_i16.NotificationModel>>);
//
//   @override
//   _i4.Future<bool> removeChannel(String? channelKey) => (super.noSuchMethod(
//         Invocation.method(
//           #removeChannel,
//           [channelKey],
//         ),
//         returnValue: _i4.Future<bool>.value(false),
//       ) as _i4.Future<bool>);
//
//   @override
//   _i4.Future<bool> requestPermissionToSendNotifications({
//     String? channelKey,
//     List<_i5.NotificationPermission>? permissions = const [
//       _i5.NotificationPermission.Alert,
//       _i5.NotificationPermission.Sound,
//       _i5.NotificationPermission.Badge,
//       _i5.NotificationPermission.Vibration,
//       _i5.NotificationPermission.Light,
//     ],
//   }) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #requestPermissionToSendNotifications,
//           [],
//           {
//             #channelKey: channelKey,
//             #permissions: permissions,
//           },
//         ),
//         returnValue: _i4.Future<bool>.value(false),
//       ) as _i4.Future<bool>);
//
//   @override
//   _i4.Future<void> resetGlobalBadge() => (super.noSuchMethod(
//         Invocation.method(
//           #resetGlobalBadge,
//           [],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> setChannel(
//     _i14.NotificationChannel? notificationChannel, {
//     bool? forceUpdate = false,
//   }) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #setChannel,
//           [notificationChannel],
//           {#forceUpdate: forceUpdate},
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> setGlobalBadgeCounter(int? amount) => (super.noSuchMethod(
//         Invocation.method(
//           #setGlobalBadgeCounter,
//           [amount],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<bool> setListeners({
//     required _i3.ActionHandler? onActionReceivedMethod,
//     _i3.NotificationHandler? onNotificationCreatedMethod,
//     _i3.NotificationHandler? onNotificationDisplayedMethod,
//     _i3.ActionHandler? onDismissActionReceivedMethod,
//   }) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #setListeners,
//           [],
//           {
//             #onActionReceivedMethod: onActionReceivedMethod,
//             #onNotificationCreatedMethod: onNotificationCreatedMethod,
//             #onNotificationDisplayedMethod: onNotificationDisplayedMethod,
//             #onDismissActionReceivedMethod: onDismissActionReceivedMethod,
//           },
//         ),
//         returnValue: _i4.Future<bool>.value(false),
//       ) as _i4.Future<bool>);
//
//   @override
//   _i4.Future<List<_i5.NotificationPermission>> shouldShowRationaleToRequest({
//     String? channelKey,
//     List<_i5.NotificationPermission>? permissions = const [
//       _i5.NotificationPermission.Badge,
//       _i5.NotificationPermission.Alert,
//       _i5.NotificationPermission.Sound,
//       _i5.NotificationPermission.Vibration,
//       _i5.NotificationPermission.Light,
//     ],
//   }) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #shouldShowRationaleToRequest,
//           [],
//           {
//             #channelKey: channelKey,
//             #permissions: permissions,
//           },
//         ),
//         returnValue: _i4.Future<List<_i5.NotificationPermission>>.value(
//             <_i5.NotificationPermission>[]),
//       ) as _i4.Future<List<_i5.NotificationPermission>>);
//
//   @override
//   _i4.Future<void> showAlarmPage() => (super.noSuchMethod(
//         Invocation.method(
//           #showAlarmPage,
//           [],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> showGlobalDndOverridePage() => (super.noSuchMethod(
//         Invocation.method(
//           #showGlobalDndOverridePage,
//           [],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<void> showNotificationConfigPage({String? channelKey}) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #showNotificationConfigPage,
//           [],
//           {#channelKey: channelKey},
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
//
//   @override
//   _i4.Future<String> getLocalization() => (super.noSuchMethod(
//         Invocation.method(
//           #getLocalization,
//           [],
//         ),
//         returnValue: _i4.Future<String>.value(_i13.dummyValue<String>(
//           this,
//           Invocation.method(
//             #getLocalization,
//             [],
//           ),
//         )),
//       ) as _i4.Future<String>);
//
//   @override
//   _i4.Future<bool> setLocalization({required String? languageCode}) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #setLocalization,
//           [],
//           {#languageCode: languageCode},
//         ),
//         returnValue: _i4.Future<bool>.value(false),
//       ) as _i4.Future<bool>);
//
//   @override
//   _i4.Future<bool> isNotificationActiveOnStatusBar({required int? id}) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #isNotificationActiveOnStatusBar,
//           [],
//           {#id: id},
//         ),
//         returnValue: _i4.Future<bool>.value(false),
//       ) as _i4.Future<bool>);
//
//   @override
//   _i4.Future<List<int>> getAllActiveNotificationIdsOnStatusBar() =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #getAllActiveNotificationIdsOnStatusBar,
//           [],
//         ),
//         returnValue: _i4.Future<List<int>>.value(<int>[]),
//       ) as _i4.Future<List<int>>);
// }
//
// /// A class which mocks [ScheduleAdhan].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockScheduleAdhan extends _i1.Mock implements _i17.ScheduleAdhan {
//   MockScheduleAdhan() {
//     _i1.throwOnMissingStub(this);
//   }
//
//   @override
//   List<String> get prayerKeys => (super.noSuchMethod(
//         Invocation.getter(#prayerKeys),
//         returnValue: <String>[],
//       ) as List<String>);
//
//   @override
//   int getPrayerIndex(String? prayer) => (super.noSuchMethod(
//         Invocation.method(
//           #getPrayerIndex,
//           [prayer],
//         ),
//         returnValue: 0,
//       ) as int);
//
//   @override
//   _i4.Future<void> initAlarmManager() => (super.noSuchMethod(
//         Invocation.method(
//           #initAlarmManager,
//           [],
//         ),
//         returnValue: _i4.Future<void>.value(),
//         returnValueForMissingStub: _i4.Future<void>.value(),
//       ) as _i4.Future<void>);
// }
//
// /// A class which mocks [AndroidAlarmManager].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockAndroidAlarmManager extends _i1.Mock
//     implements _i18.AndroidAlarmManager {
//   MockAndroidAlarmManager() {
//     _i1.throwOnMissingStub(this);
//   }
// }
//
// /// A class which mocks [PrayerService].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockPrayerService extends _i1.Mock implements _i19.PrayerService {
//   MockPrayerService() {
//     _i1.throwOnMissingStub(this);
//   }
//
//   @override
//   List<String> get prayerKeys => (super.noSuchMethod(
//         Invocation.getter(#prayerKeys),
//         returnValue: <String>[],
//       ) as List<String>);
//
//   @override
//   _i4.Future<List<_i20.NotificationInfoModel>> getPrayers() =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #getPrayers,
//           [],
//         ),
//         returnValue: _i4.Future<List<_i20.NotificationInfoModel>>.value(
//             <_i20.NotificationInfoModel>[]),
//       ) as _i4.Future<List<_i20.NotificationInfoModel>>);
//
//   @override
//   _i4.Future<_i21.PrayerNotification?> getPrayerDataByIndex(
//     _i2.DetailedMosque? mosque,
//     int? index,
//   ) =>
//       (super.noSuchMethod(
//         Invocation.method(
//           #getPrayerDataByIndex,
//           [
//             mosque,
//             index,
//           ],
//         ),
//         returnValue: _i4.Future<_i21.PrayerNotification?>.value(),
//       ) as _i4.Future<_i21.PrayerNotification?>);
//
//   @override
//   DateTime? getPrayerTime(
//     _i2.DetailedMosque? mosque,
//     String? key, {
//     DateTime? time,
//   }) =>
//       (super.noSuchMethod(Invocation.method(
//         #getPrayerTime,
//         [
//           mosque,
//           key,
//         ],
//         {#time: time},
//       )) as DateTime?);
//
//   @override
//   _i4.Future<_i2.DetailedMosque> getMosque(String? uuid) => (super.noSuchMethod(
//         Invocation.method(
//           #getMosque,
//           [uuid],
//         ),
//         returnValue: _i4.Future<_i2.DetailedMosque>.value(_FakeDetailedMosque_0(
//           this,
//           Invocation.method(
//             #getMosque,
//             [uuid],
//           ),
//         )),
//       ) as _i4.Future<_i2.DetailedMosque>);
// }
//
// /// A class which mocks [PrayersName].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockPrayersName extends _i1.Mock implements _i22.PrayersName {
//   MockPrayersName() {
//     _i1.throwOnMissingStub(this);
//   }
//
//   @override
//   _i4.Future<String> getPrayerName(int? index) => (super.noSuchMethod(
//         Invocation.method(
//           #getPrayerName,
//           [index],
//         ),
//         returnValue: _i4.Future<String>.value(_i13.dummyValue<String>(
//           this,
//           Invocation.method(
//             #getPrayerName,
//             [index],
//           ),
//         )),
//       ) as _i4.Future<String>);
//
//   @override
//   _i4.Future<String> getStringText() => (super.noSuchMethod(
//         Invocation.method(
//           #getStringText,
//           [],
//         ),
//         returnValue: _i4.Future<String>.value(_i13.dummyValue<String>(
//           this,
//           Invocation.method(
//             #getStringText,
//             [],
//           ),
//         )),
//       ) as _i4.Future<String>);
//
//   @override
//   _i4.Future<String> getLanguage() => (super.noSuchMethod(
//         Invocation.method(
//           #getLanguage,
//           [],
//         ),
//         returnValue: _i4.Future<String>.value(_i13.dummyValue<String>(
//           this,
//           Invocation.method(
//             #getLanguage,
//             [],
//           ),
//         )),
//       ) as _i4.Future<String>);
// }
